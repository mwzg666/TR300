C251 COMPILER V5.60.0,  system                                                             03/09/24  13:56:03  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE system
OBJECT MODULE PLACED IN .\obj\system.obj
COMPILER INVOKED BY: D:\KeilMDK\C251\BIN\C251.EXE Hardware\System\system.c XSMALL INTR2 OPTIMIZE(0,SPEED) BROWSE INCDIR(
                    -.\User;.\Hardware\CalcDoseRate;.\Hardware\Cmd;.\Hardware\Flash;.\Hardware\IIC;.\Hardware\Mcp4725;.\Hardware\Sensor;.\Har
                    -dware\System;.\Hardware\Uart;.\User;.\Hardware\BatVoltage;.\Hardware\DoseRate;.\Hardware\CalcCps;.\Hardware\CRC;.\Hardwa
                    -re\Queue) PRINT(.\obj\system.lst) OBJECT(.\obj\system.obj) 

stmt  level    source

    1          #include "main.h"
    2          #include "uart.h"
    3          #include "system.h"
    4          #include "CMD.h"
    5          u16  Timer0Cnt = 0;
    6          u32  Pluse3Cnt = 0;
    7          u32  Pluse4Cnt = 0;
    8          u16  IDLCnt = 0;
    9          
   10          u8   LowOverFlowCnt3 = 0;
   11          u8   HightOverFlowCnt4 = 0;
   12          
   13          void SysInit()
   14          {
   15   1          HIRCCR = 0x80;           // 启动内部高速IRC
   16   1          while(!(HIRCCR & 1));
   17   1          CLKSEL = 0x00; 
   18   1      }
   19          
   20          
   21          //========================================================================
   22          // 函数名称: void Timer0_Init(void)     
   23          // 函数功能: 在时钟源为11.0592MHz下TIMER0初始化为10ms定时
   24          // 入口参数: @无
   25          // 函数返回: 无
   26          // 当前版本: VER1.0
   27          // 修改日期: 2023.5.5
   28          // 当前作者:
   29          // 其他备注: 
   30          //========================================================================
   31          void Timer0_Init(void)          //100毫秒@6MHz
   32          {
   33   1      //      AUXR &= 0x7F;                   //定时器时钟12T模式----6MHz
   34   1      //      TMOD &= 0xF0;                   //设置定时器模式
   35   1      //      TL0 = 0x78;                             //设置定时初始值――6MHz_10ms
   36   1      //      TH0 = 0xEC;                             //设置定时初始值
   37   1      
   38   1      //    TL0 = 0xB0;                               //设置定时初始值――6MHz_100ms
   39   1      //      TH0 = 0x3C;                             //设置定时初始值
   40   1          
   41   1      //      TF0 = 0;                                //清除TF0标志
   42   1      //      TR0 = 1;                                //定时器0开始计时
   43   1      //      ET0 = 1;                                //使能定时器0中断
   44   1      
   45   1      
   46   1          AUXR |= 0x00;    //Timer0 set as 12T, 16 bits timer auto-reload, _11MHz_10ms
   47   1          TH0 = (u8)(Timer0_Reload / 256);
   48   1          TL0 = (u8)(Timer0_Reload % 256);
   49   1          ET0 = 1;    //Timer0 interrupt enable
   50   1          TR0 = 1;    //Tiner0 run   
   51   1          // 中断优先级3
   52   1          PT0  = 0;
   53   1          PT0H = 0;
   54   1      
   55   1      }
   56          
C251 COMPILER V5.60.0,  system                                                             03/09/24  13:56:03  PAGE 2   

   57          //========================================================================
   58          // 函数名称: void Timer3_Init(void)
   59          // 函数功能: TIMER3初始化为下降沿计数模式
   60          // 入口参数: @无
   61          // 函数返回: 无
   62          // 当前版本: VER1.0
   63          // 修改日期: 2023.5.5
   64          // 当前作者:
   65          // 其他备注: 
   66          //========================================================================
   67          void Timer3_Init(void)
   68          {
   69   1          T3L = 0x00;
   70   1          T3H = 0x00;
   71   1          T4T3M = 0x0C;
   72   1          IE2 = 0x20;             //Timer3 interrupt enable
   73   1      }
   74          
   75          
   76          
   77          //========================================================================
   78          // 函数名称: void Timer4_Init(void)
   79          // 函数功能: TIMER4初始化为下降沿计数模式
   80          // 入口参数: @无
   81          // 函数返回: 无
   82          // 当前版本: VER1.0
   83          // 修改日期: 2023.5.18
   84          // 当前作者:
   85          // 其他备注: 
   86          //========================================================================
   87          void Timer4_Init(void)
   88          {
   89   1          T4L = 0x00;
   90   1          T4H = 0x00;
   91   1          T4T3M |= 0xC0;
   92   1          IE2 |= 0x40;             //Timer4 interrupt enable
   93   1      
   94   1      }
   95          
   96          //========================================================================
   97          // 函数名称: void Timer1_Init(void)     
   98          // 函数功能: 在时钟源为11.0592MHz下TIMER1初始化为10ms定时
   99          // 入口参数: @无
  100          // 函数返回: 无
  101          // 当前版本: VER1.0
  102          // 修改日期: 2023.5.5
  103          // 当前作者:
  104          // 其他备注: 
  105          //========================================================================
  106          void Timer1_Init(void)          //10毫秒@11.0592MHz
  107          {
  108   1              AUXR &= 0xBF;                   //定时器时钟12T模式
  109   1              TMOD &= 0x0F;                   //设置定时器模式
  110   1              TL1 = 0x00;                             //设置定时初始值
  111   1              TH1 = 0xDC;                             //设置定时初始值
  112   1              TF1 = 0;                                //清除TF1标志
  113   1              TR1 = 1;                                //定时器1开始计时
  114   1              ET1 = 1;                                //使能定时器1中断
  115   1      }
  116           
  117          //========================================================================
  118          // 函数名称: u32 GetCounter(void)
  119          // 函数功能: 获取TIMER3的脉冲计数
  120          // 入口参数: @无
  121          // 函数返回: 脉冲计数的值
  122          // 当前版本: VER1.0
C251 COMPILER V5.60.0,  system                                                             03/09/24  13:56:03  PAGE 3   

  123          // 修改日期: 2023.5.5
  124          // 当前作者:
  125          // 其他备注: 
  126          //========================================================================
  127          u32 GetCounter(void)
  128          {
  129   1              u32 Return = 0;
  130   1          Pluse3Cnt =((u32)LowOverFlowCnt3*65536) | (u32)((u32)T3H*256+T3L) ;
  131   1          Return =Pluse3Cnt;
  132   1          T3R = 0;
  133   1          T3H = 0;
  134   1          T3L = 0;
  135   1          T3R = 1;
  136   1          LowOverFlowCnt3 = 0;
  137   1              Pluse3Cnt = 0;
  138   1              return Return;
  139   1      }
  140          u32 GetHightCounter(void)
  141          {
  142   1              u32 Return = 0;
  143   1          Pluse4Cnt = ((u32)HightOverFlowCnt4*65536) | (u32)((u32)T4H*256+T4L) ;
  144   1          Return = Pluse4Cnt;
  145   1      
  146   1          T4R = 0;
  147   1          T4H = 0;
  148   1          T4L = 0;
  149   1          T4R = 1;
  150   1          HightOverFlowCnt4 = 0;
  151   1              Pluse4Cnt = 0;
  152   1              return Return;
  153   1      }
  154          
  155          void Timer0_Isr (void) interrupt 1   //Timer0中断
  156          {
  157   1          Timer0Cnt ++;
  158   1          IDLCnt++;
  159   1          
  160   1      }
  161          
  162          void Timer3_Isr() interrupt 19      //Timer3中断
  163          {
  164   1          LowOverFlowCnt3++;
  165   1         
  166   1      }
  167          
  168          void Timer4_Isr() interrupt 20      //Timer4中断
  169          {
  170   1          HightOverFlowCnt4++;
  171   1         
  172   1      }
  173          
  174          
  175          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       370     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        22     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
C251 COMPILER V5.60.0,  system                                                             03/09/24  13:56:03  PAGE 4   

  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        38     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
