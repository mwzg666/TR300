C251 COMPILER V5.60.0,  system                                                             12/11/24  09:53:27  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE system
OBJECT MODULE PLACED IN .\obj\system.obj
COMPILER INVOKED BY: D:\KeilMDK\C251\BIN\C251.EXE Hardware\System\system.c XSMALL INTR2 OPTIMIZE(0,SPEED) BROWSE INCDIR(
                    -.\User;.\Hardware\CalcDoseRate;.\Hardware\Cmd;.\Hardware\Flash;.\Hardware\IIC;.\Hardware\Mcp4725;.\Hardware\Sensor;.\Har
                    -dware\System;.\Hardware\Uart;.\User;.\Hardware\BatVoltage;.\Hardware\DoseRate;.\Hardware\CalcCps;.\Hardware\CRC;.\Hardwa
                    -re\Queue) PRINT(.\obj\system.lst) OBJECT(.\obj\system.obj) 

stmt  level    source

    1          #include "main.h"
    2          #include "uart.h"
    3          #include "system.h"
    4          #include "CMD.h"
    5          u16  Timer0Cnt = 0;
    6          u32  Pluse3Cnt = 0;
    7          u32  Pluse4Cnt = 0;
    8          u16  IDLCnt = 0;
    9          
   10          u8   LowOverCnt3 = 0;
   11          u8   HighOverCnt4 = 0;
   12          
   13          void SysInit()
   14          {
   15   1          HIRCCR = 0x80;           // 启动内部高速IRC
   16   1          while(!(HIRCCR & 1));
   17   1          CLKSEL = 0x00; 
   18   1      }
   19          
   20          
   21          //========================================================================
   22          // 函数名称: void Timer0_Init(void)     
   23          // 函数功能: 在时钟源为11.0592MHz下TIMER0初始化为10ms定时
   24          // 入口参数: @无
   25          // 函数返回: 无
   26          // 当前版本: VER1.0
   27          // 修改日期: 2023.5.5
   28          // 当前作者:
   29          // 其他备注: 
   30          //========================================================================
   31          void Timer0_Init(void)          //10毫秒@11MHz
   32          {
   33   1          AUXR = 0x00;    //Timer0 set as 12T, 16 bits timer auto-reload, 
   34   1          TH0 = (u8)(Timer0_Reload / 256);
   35   1          TL0 = (u8)(Timer0_Reload % 256);
   36   1          ET0 = 1;    //Timer0 interrupt enable
   37   1          TR0 = 1;    //Tiner0 run
   38   1          
   39   1          // 中断优先级3
   40   1          PT0  = 0;
   41   1          PT0H = 0;
   42   1      
   43   1      }
   44          
   45          //========================================================================
   46          // 函数名称: void Timer3_Init(void)
   47          // 函数功能: TIMER3初始化为下降沿计数模式
   48          // 入口参数: @无
   49          // 函数返回: 无
   50          // 当前版本: VER1.0
   51          // 修改日期: 2023.5.5
   52          // 当前作者:
   53          // 其他备注: 
   54          //========================================================================
   55          void Timer3_Init(void)
   56          {
C251 COMPILER V5.60.0,  system                                                             12/11/24  09:53:27  PAGE 2   

   57   1          T3L = 0x00;
   58   1          T3H = 0x00;
   59   1          T4T3M = 0x0C;
   60   1          IE2 |= 0x20;             //Timer3 interrupt enable
   61   1      }
   62          
   63          
   64          
   65          //========================================================================
   66          // 函数名称: void Timer4_Init(void)
   67          // 函数功能: TIMER4初始化为下降沿计数模式
   68          // 入口参数: @无
   69          // 函数返回: 无
   70          // 当前版本: VER1.0
   71          // 修改日期: 2023.5.18
   72          // 当前作者:
   73          // 其他备注: 
   74          //========================================================================
   75          void Timer4_Init(void)
   76          {
   77   1          T4L = 0x00;
   78   1          T4H = 0x00;
   79   1          T4T3M |= 0xC0;
   80   1          IE2 |= 0x40;             //Timer4 interrupt enable
   81   1      
   82   1      }
   83          
   84          //========================================================================
   85          // 函数名称: void Timer1_Init(void)     
   86          // 函数功能: 在时钟源为11.0592MHz下TIMER1初始化为10ms定时
   87          // 入口参数: @无
   88          // 函数返回: 无
   89          // 当前版本: VER1.0
   90          // 修改日期: 2023.5.5
   91          // 当前作者:
   92          // 其他备注: 
   93          //========================================================================
   94          void Timer1_Init(void)          //10毫秒@11.0592MHz
   95          {
   96   1              AUXR &= 0xBF;                   //定时器时钟12T模式
   97   1              TMOD &= 0x0F;                   //设置定时器模式
   98   1              TL1 = 0x00;                             //设置定时初始值
   99   1              TH1 = 0xDC;                             //设置定时初始值
  100   1              TF1 = 0;                                //清除TF1标志
  101   1              TR1 = 1;                                //定时器1开始计时
  102   1              ET1 = 1;                                //使能定时器1中断
  103   1      }
  104           
  105          //========================================================================
  106          // 函数名称: u32 GetCounter(void)
  107          // 函数功能: 获取TIMER3的脉冲计数
  108          // 入口参数: @无
  109          // 函数返回: 脉冲计数的值
  110          // 当前版本: VER1.0
  111          // 修改日期: 2023.5.5
  112          // 当前作者:
  113          // 其他备注: 
  114          //========================================================================
  115          u32 GetCounter(void)
  116          {
  117   1              u32 Return = 0;
  118   1          Pluse3Cnt =((u32)LowOverCnt3*65536) | (u32)((u32)T3H*256+T3L) ;
  119   1          Return =Pluse3Cnt;
  120   1          T3R = 0;
  121   1          T3H = 0;
  122   1          T3L = 0;
C251 COMPILER V5.60.0,  system                                                             12/11/24  09:53:27  PAGE 3   

  123   1          T3R = 1;
  124   1          LowOverCnt3 = 0;
  125   1              Pluse3Cnt = 0;
  126   1              return Return;
  127   1      }
  128          u32 GetHightCounter(void)
  129          {
  130   1              u32 Return = 0;
  131   1          Pluse4Cnt = ((u32)HighOverCnt4*65536) | (u32)((u32)T4H*256+T4L) ;
  132   1          Return = Pluse4Cnt;
  133   1      
  134   1          T4R = 0;
  135   1          T4H = 0;
  136   1          T4L = 0;
  137   1          T4R = 1;
  138   1          HighOverCnt4 = 0;
  139   1              Pluse4Cnt = 0;
  140   1              return Return;
  141   1      }
  142          
  143          void Timer0_Isr (void) interrupt 1   //Timer0中断
  144          {
  145   1          Timer0Cnt ++;
  146   1          IDLCnt++;
  147   1          
  148   1      }
  149          
  150          void Timer3_Isr() interrupt 19      //Timer3中断
  151          {
  152   1          LowOverCnt3++;
  153   1         
  154   1      }
  155          
  156          void Timer4_Isr() interrupt 20      //Timer4中断
  157          {
  158   1          HighOverCnt4++;
  159   1         
  160   1      }
  161          
  162          
  163          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       368     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        22     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        38     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
